# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class BookSearch(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, isbn=None, title=None, author=None, image_path=None):  # noqa: E501
        """BookSearch - a model defined in OpenAPI

        :param isbn: The isbn of this BookSearch.  # noqa: E501
        :type isbn: str
        :param title: The title of this BookSearch.  # noqa: E501
        :type title: str
        :param author: The author of this BookSearch.  # noqa: E501
        :type author: str
        :param image_path: The image_path of this BookSearch.  # noqa: E501
        :type image_path: str
        """
        self.openapi_types = {
            'isbn': str,
            'title': str,
            'author': str,
            'image_path': str
        }

        self.attribute_map = {
            'isbn': 'isbn',
            'title': 'title',
            'author': 'author',
            'image_path': 'imagePath'
        }

        self._isbn = isbn
        self._title = title
        self._author = author
        self._image_path = image_path

    @classmethod
    def from_dict(cls, dikt) -> 'BookSearch':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The BookSearch of this BookSearch.  # noqa: E501
        :rtype: BookSearch
        """
        return util.deserialize_model(dikt, cls)

    @property
    def isbn(self):
        """Gets the isbn of this BookSearch.


        :return: The isbn of this BookSearch.
        :rtype: str
        """
        return self._isbn

    @isbn.setter
    def isbn(self, isbn):
        """Sets the isbn of this BookSearch.


        :param isbn: The isbn of this BookSearch.
        :type isbn: str
        """

        self._isbn = isbn

    @property
    def title(self):
        """Gets the title of this BookSearch.


        :return: The title of this BookSearch.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this BookSearch.


        :param title: The title of this BookSearch.
        :type title: str
        """

        self._title = title

    @property
    def author(self):
        """Gets the author of this BookSearch.


        :return: The author of this BookSearch.
        :rtype: str
        """
        return self._author

    @author.setter
    def author(self, author):
        """Sets the author of this BookSearch.


        :param author: The author of this BookSearch.
        :type author: str
        """

        self._author = author

    @property
    def image_path(self):
        """Gets the image_path of this BookSearch.


        :return: The image_path of this BookSearch.
        :rtype: str
        """
        return self._image_path

    @image_path.setter
    def image_path(self, image_path):
        """Sets the image_path of this BookSearch.


        :param image_path: The image_path of this BookSearch.
        :type image_path: str
        """

        self._image_path = image_path
